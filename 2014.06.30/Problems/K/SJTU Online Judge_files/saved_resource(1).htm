<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0048)http://172.16.45.6/contests/1003/problem-K/html/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style>   body { font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif; }</style><meta content="width=768" name="viewport"><meta content="IE=edge" http-equiv="X-UA-Compatible"><title>1872. Spacious Office @ Timus Online Judge</title></head><body alink="#1A5CC8" link="#1A5CC8" vlink="#1A5CC8"><div class="prnver"><h2 class="problem_title">1872. Spacious Office</h2><div class="problem_limits">Time limit: 1.0 second<br>Memory limit: 64 MB<br><br></div><div id="problem_text"><div class="problem_par"><div class="problem_par_normal">Programmers at the company “Perimeter” are working on <i>n</i> software projects.
Their boss Shiftman understands the importance of comfortable working conditions.
There is neither dress code nor fixed work schedule in the company, but there always is
tea and fresh kiwis in the kitchen. When the team of the “Diplodocus” project 
complained that their room was too crowded after new employees had joined the company, 
Shiftman understood that it was time to search for a new spacious office.</div></div><div class="problem_par"><div class="problem_par_normal">A new office building was found quickly. It was located near a subway station and a nice park.
In addition, there was a large underground parking. The number of rooms in the office 
was the same as the number of projects in the company, so Shiftman decided to assign a room 
to each project, thus creating a unique work atmosphere for the teams. Project managers 
had their own notions of ideal room for their projects. Of course, the room should not be too small.
However, if the room would be too big, the programmers might be afraid that a new team 
would be added to their room. Help the managers to assign the rooms quickly and without 
the boss's meddling.</div></div><h3 class="problem_subtitle">Input</h3><div class="problem_par"><div class="problem_par_normal">The first line contains the number <i>n</i> of projects in the company (2 ≤ <i>n</i> ≤ 1&nbsp;000).
In the second line you are given <i>n</i> numbers, which are the areas of all the rooms in
the new office. The <i>i</i>th of the following <i>n</i> lines contains two numbers, which are
the minimum and maximum areas of the room in which the team of the <i>i</i>th project agrees to work
(of course, the minimum area does not exceed the maximum area). All the areas
are positive integers and do not exceed&nbsp;10&nbsp;000.</div></div><h3 class="problem_subtitle">Output</h3><div class="problem_par"><div class="problem_par_normal">If there is only one way to assign the rooms to the teams, output “Perfect!”
in the first line and a permutation of integers from&nbsp;1 to&nbsp;<i>n</i> in the second line.
In this permutation, the <i>i</i>th element must be the number of the room assigned to the team of the <i>i</i>th project.
The rooms are numbered from&nbsp;1 to&nbsp;<i>n</i> in the order in which they are described in the input.
If there are several ways to assign the rooms, output “Ask Shiftman for help.”
If it is impossible to assign the rooms as required, output “Let's search for another office.”</div></div><h3 class="problem_subtitle">Samples</h3><table class="sample"><tbody><tr><th width="350">input</th><th width="350">output</th></tr><tr><td><pre class="intable">3
40 50 60
30 70
20 40
60 60
</pre></td><td><pre class="intable">Perfect!
2 1 3
</pre></td></tr><tr><td><pre class="intable">3
40 50 70
30 70
20 50
60 60
</pre></td><td><pre class="intable">Let's search for another office.
</pre></td></tr></tbody></table><div class="problem_source"><b>Problem Author: </b>Alexander Klepinin<br><b>Problem Source: </b>Open Ural FU Championship 2011<br><br></div></div></div><script type="text/javascript" async="" src="watch.js"></script><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter20918869 = new Ya.Metrika({id:20918869, webvisor:true, clickmap:true, trackLinks:true, accurateTrackBounce:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript>&lt;div&gt;&lt;img alt="" src="http://mc.yandex.ru/watch/20918869" style="position:absolute; left:-9999px;"/&gt;&lt;/div&gt;</noscript><div></div></body></html>